#include "hw_config.h"  //하드웨어 제어를 위한 설정값 헤더 

extern __IO uint32_t StartUpCounter;

void System_Information()
{
  printf("USART1->BRR : 0x%08X\n", USART1->BRR);         //USART1 의 BRR값 을 바이트 크기로 출력
  printf("StartUpCounter : %d\n", StartUpCounter);      //스타트업 카운터 정수형으로 출력
}

int main(void)
{
  uint8_t ch;                               //사용자 정의 자료형 8비트 크기 변수 생성 
  
  RCC_Configuration();                      //클럭 설정 함수 실행
  
  //APB2ENR에서 사용할 기능을 정의하는 중
  RCC->APB2ENR |= RCC_APB2Periph_GPIOA;     //RCC 스트럭쳐에 있는 APB2EN 에다가 APB2Periph_GPIOA를 OR연산해라
  RCC->APB2ENR |= RCC_APB2Periph_GPIOB;     
  RCC->APB2ENR |= RCC_APB2Periph_USART;
  
  GPIO_Configuration();                     // 사용할 기능 설정
  
  USART1_Init();                            // 기능 시작 
  
  while(1)                                  //반복문 시작 
  {
    printf("\n----------------------------\n");                    //메뉴화면
    printf("Press menu key\n");
    printf("------------------------------\n");
    printf("0> System Information\n");
    printf("------------------------------\n");
    printf("1>LED TEST \n");
    printf("2>KEY Test\n");
    printf("3>7-segment test\n");
    printf("------------------------------\n");
    printf("x > quit\n");
  
    ch=USART_GetCharacter(USART1);                                 //8비트 크기 변수안에 USART의 문자 입력을 받는다
    printf(" is selected\n\n");                                    //선택한 문자 확인 출력
    
    switch((char)ch)                                               //선택문 시작
    {
      case '0':
        System_Information();
        break;
        
      case '1';
        Led_Test();
        break;
       
      case '2';
        KEY_TEST();
        break;
        
      case '3';
        KEY_TEST();
        break;
    }
    if('x' == (char)ch)                                           //만약 x를 ch변수에 값을 받으면 
    {
      break;                                                      //while문 전체  
    }
  }
}
